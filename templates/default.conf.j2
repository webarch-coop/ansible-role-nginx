# {{ ansible_managed }}
#
# You should look at the following URL's in order to grasp a solid understanding
# of Nginx configuration files in order to fully unleash the power of Nginx.
# https://www.nginx.com/resources/wiki/start/
# https://www.nginx.com/resources/wiki/start/topics/tutorials/config_pitfalls/
# https://wiki.debian.org/Nginx/DirectoryStructure
#
# In most cases, administrators will remove this file from sites-enabled/ and
# leave it as reference inside of sites-available where it will continue to be
# updated by the nginx packaging team.
#
# This file will automatically load configuration files provided by other
# applications, such as Drupal or Wordpress. These applications will be made
# available underneath a path with that package name, such as /drupal8.
#
# Please see /usr/share/doc/nginx-doc/examples/ for more detailed examples.
##

# Default server configuration
#
server {
{% if nginx_default_server | bool %}
    listen {{ nginx_default_server_port }} default_server;
{% else %}
    listen {{ nginx_default_server_port }};
{% endif %}
{% if nginx_ipv6 is defined and nginx_ipv6 | bool %}
{%     if nginx_default_server | bool %}
    listen [::]:{{ nginx_default_server_port }} default_server;
{%     else %}
    listen [::]:{{ nginx_default_server_port }};
{%     endif %}
{% endif %}
    # SSL configuration
    #
    # listen 443 ssl default_server;
    # listen [::]:443 ssl default_server;
    #
    # Note: You should disable gzip for SSL traffic.
    # See: https://bugs.debian.org/773332
    #
    # Read up on ssl_ciphers to ensure a secure configuration.
    # See: https://bugs.debian.org/765782
    #
    # Self signed certs generated by the ssl-cert package
    # Don't use them in a production server!
    #
    # include snippets/snakeoil.conf;

    root {{ nginx_default_root }};

    # Add index.php to the list if you are using PHP
{% if nginx_default_server_index is defined %}
    index {{ nginx_default_server_index | join(' ') }};
{% else %}
    index index.html index.htm index.nginx-debian.html;
{% endif %}

{% if nginx_default_server_name is defined %}
    server_name {{ nginx_default_server_name }};
{% else %}
    server_name _;
{% endif %}

    location /.well-known/acme-challenge/ {
        allow all;
        # try_files $uri $uri/;
    }

    location / {
        # Redirect all HTTP requests to HTTPS with a 301 Moved Permanently response.
        return 301 {{ nginx_default_https_redirect }};
    }

    #location / {
    #    # First attempt to serve request as file, then
    #    # as directory, then fall back to displaying a 404.
    #    try_files $uri $uri/ =404;
    #}

    # pass PHP scripts to FastCGI server
    #
    #location ~ \.php$ {
    #    include snippets/fastcgi-php.conf;
    #
    #    # With php-fpm (or other unix sockets):
    #    fastcgi_pass unix:/var/run/php/php7.0-fpm.sock;
    #    # With php-cgi (or other tcp sockets):
    #    fastcgi_pass 127.0.0.1:9000;
    #}

    # deny access to .htaccess files, if Apache's document root
    # concurs with nginx's one
    #
    #location ~ /\.ht {
    #    deny all;
    #}
}

{% if nginx_ssl is defined and nginx_ssl | bool and nginx_default_tls is defined and nginx_default_tls | bool %}
# Default TLS server configuration
#
server {
        # https://ssl-config.mozilla.org/
{%     if nginx_default_server | bool %}
        listen 443 ssl http2 default_server;
        listen [::]:443 ssl http2 default_server;
{%     else %}
        listen 443 ssl http2;
        listen [::]:443 ssl http2;
{%     endif %}
        ssl_certificate {{ nginx_default_ssl_certificate }};
        ssl_certificate_key {{ nginx_default_ssl_certificate_key }};
        ssl_trusted_certificate {{ nginx_default_ssl_trusted_certificate }};
{%     if "TLSv1.2" in nginx_ssl_protocols and "TLSv1.3" in nginx_ssl_protocols %}
        ssl_ciphers {{ nginx_cipher_suites_tls1_3 }}:{{ nginx_cipher_suites_tls1_2 }};
{%     elif "TLSv1.3" in nginx_ssl_protocols %}
        ssl_ciphers {{ nginx_cipher_suites_tls1_3 }};
{%     endif %};
        ssl_session_timeout 1d;
        ssl_session_cache shared:MozSSL:10m;  # about 40000 sessions
        ssl_session_tickets off;
        ssl_protocols {{ nginx_ssl_protocols | join(' ') }};
        ssl_prefer_server_ciphers off;
        add_header Strict-Transport-Security "max-age=63072000" always;
        ssl_stapling on;
        ssl_stapling_verify on;
{%     if nginx_default_server_name is defined %}
        server_name {{ nginx_default_server_name }};
{%     else %}
        server_name _;
{%     endif %}
        root {{ nginx_default_root }};
{%     if nginx_default_server_index is defined %}
        index {{ nginx_default_server_index | join(' ') }};
{%     else %}
        index index.html index.htm index.nginx-debian.html;
{%     endif %}
{%     if nginx_default_redirect is defined %}
        location / {
                return 301 {{ nginx_default_redirect }};
    }
{%     endif %}
}
{% endif %}


# Virtual Host configuration for example.com
#
# You can move that to a different file under sites-available/ and symlink that
# to sites-enabled/ to enable it.
#
#server {
#    listen 80;
#    listen [::]:80;
#
#    server_name example.com;
#
#    root /var/www/example.com;
#    index index.html;
#
#    location / {
#        try_files $uri $uri/ =404;
#    }
#}
#
# vim: syntax=nginx{# vim: syntax=jinja2 #}
